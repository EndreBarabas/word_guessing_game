/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package word_guessing_game;

import static org.mockito.Mockito.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class GameTest {


    @Test void testGetRemainingAttempts() {
        WordChoser wordchoser = mock(WordChoser.class);
        when(wordchoser.getRandomWordFromDictionary()).thenReturn("MAKERS");
        Game game = new Game(wordchoser);
        assertEquals(Integer.valueOf(10), game.getRemainingAttempts(),"this is a random message");
    }

    @Test void testGuessLetter(){
        WordChoser wordchoser = mock(WordChoser.class);
        when(wordchoser.getRandomWordFromDictionary()).thenReturn("DEVELOPER");
        Game game = new Game(wordchoser);
        assertEquals("Good guess!",game.guessLetter('R'));
        assertEquals("Nope, not really. 9 attempts remaining",game.guessLetter('X'));
        assertEquals("You have already tried that letter.",game.guessLetter('R'));
    }

    @Test void testIsGameLost() {
        WordChoser wordchoser = mock(WordChoser.class);
        when(wordchoser.getRandomWordFromDictionary()).thenReturn("DEVELOPER");
        Game game = new Game(wordchoser);
        game.attempts = 1;
        game.guessLetter('X');
        assertEquals(true, game.isGameLost());
    }

    @Test void testIsGameWon() {
        WordChoser wordchoser = mock(WordChoser.class);
        when(wordchoser.getRandomWordFromDictionary()).thenReturn("DEVELOPER");
        Game game = new Game(wordchoser);
        assertEquals("D________", game.getWordToGuess());
        game.guessLetter('E');
        assertEquals("DE_E___E_", game.getWordToGuess());
        game.guessLetter('X');
        assertEquals(9, game.getRemainingAttempts());
        game.guessLetter('V');
        assertEquals("DEVE___E_", game.getWordToGuess());
        game.guessLetter('Z');
        assertEquals(8, game.getRemainingAttempts());
        game.guessLetter('L');
        assertEquals("DEVEL__E_", game.getWordToGuess());
        game.guessLetter('O');
        assertEquals("DEVELO_E_", game.getWordToGuess());
        game.guessLetter('P');
        assertEquals("DEVELOPE_", game.getWordToGuess());
        game.guessLetter('R'); //Why does the R work and not the rest?
        //When i go through with this manually it works. I dont know why the test doesnt.
        //UPDATE: the game.getWordToGuess has to be called in order to make the tests work.
        assertEquals("DEVELOPER", game.getWordToGuess());
        assertEquals(true, game.isGameWon());
    }
}
